# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Conversion Pattern
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# %c 		- Logger, %c{2 } last 2 partial names
# %C 		- Class name (full agony), %C{2 } last 2 partial names
# %d		- {dd MMM yyyy HH:MM:ss } Date, format see java.text.SimpleDateFormat. Or %d{ISO8601}
# %F 		- File name
# %l 		- Location (caution: compiler-option-dependently)
# %L 		- Line number
# %m 		- user-defined message
# %M 		- Method name
# %p 		- Level
# %r 		- Milliseconds since program start
# %t 		- Threadname
# %x, %X	- see Doku
# %% 		- individual percentage sign
#
# Caution: %C, %F, %l, %L, %M slow down program run!
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# %c %C %d %F %l %L %m %M %p %r %t %x %X %%
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Default to info level output; this is very handy if you eventually use Hibernate as well.
log4j.rootCategory=info, stdout, I, E, F

log4j.category.org.springframework.beans.factory=INFO

# stdout is set to be a ConsoleAppender.
log4j.appender.stdout=org.apache.log4j.ConsoleAppender

# stdout uses PatternLayout.
log4j.appender.stdout.threshold=INFO
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=[%p] %c{2} %m%n
log4j.appender.stdout.layout.ConversionPattern=[@APPNAME@] %p [%t] %C{1}.%M(%L) | %m%n

# Service category names are the name of the defining module class
# and then the service id.
log4j.category.com.test.services.AppModule.TimingFilter=info

# Outputs a list of pages, components and mixins at startup.
log4j.category.org.apache.tapestry5.services.TapestryModule.ComponentClassResolver=info

# Outputs startup statistics; elapsed time to setup and initialize the registry, a list of
# available services, and a launch banner that includes the Tapestry version number.
log4j.category.org.apache.tapestry5.TapestryFilter=info

#log4j.category.org.hibernate=DEBUG
# Turning on debug mode for a page's or component's transformer logger
# will show all of the code changes that occur when the
# class is loaded.

# log4j.category.tapestry.transformer.com.test.pages.Index=debug

# Turning on debug mode for a component's events logger will show all the events triggered on the
# component, and which component methods are invoked as a result.

# log4j.category.tapestry.events.com.test.pages.Index=debug

# Turning on trace mode for a page's render logger provides extended information about every step
# in rendering (this is not generally helpful).  Turning on debug mode will add a one-line
# summary that includes the elapsed render time, which can be useful in tracking down
# performance issues.

# log4j.category.tapestry.render.com.test.pages.Index=debug

# Turn on some verbose debugging about everything in the application. This is nice initially,
# while getting everything set up.  You'll probably want to remove this once you are 
# up and running, replacing it with more selective debugging output.
log4j.category.com.test=debug


# SCC system-d hereglegchin hiisen uildeluudig burtgene.
log4j.logger.INSPECTOR=INFO, inspector
log4j.additivity.INSPECTOR = false

log4j.appender.inspector=org.apache.log4j.DailyRollingFileAppender
log4j.appender.inspector.datePattern='.'yyyy-MM-dd
#log4j.appender.inspector.threshold=INFO
log4j.appender.inspector.File=${catalina.base}/logs/inspector/SCC-inspector.log
log4j.appender.inspector.layout=org.apache.log4j.PatternLayout
log4j.appender.inspector.layout.ConversionPattern=%d{ISO8601}<log>%p<log>%r<log>%c<log>%t<log>%l<log>%m%n

# Info
log4j.appender.I=org.apache.log4j.DailyRollingFileAppender
log4j.appender.I.datePattern='.'yyyy-MM-dd
log4j.appender.I.threshold=INFO
log4j.appender.I.File=${catalina.base}/logs/info/SCC-info.log
log4j.appender.I.layout=org.apache.log4j.PatternLayout
log4j.appender.I.layout.ConversionPattern=%d{ISO8601} %p %t %c - %m%n

# Warn
#log4j.appender.W=org.apache.log4j.RollingFileAppender
#log4j.appender.W.threshold=WARN
#log4j.appender.W.File=${catalina.base}/logs/SCC-warn.log
#log4j.appender.W.MaxFileSize=3MB
#log4j.appender.W.MaxBackupIndex=1
#log4j.appender.W.layout=org.apache.log4j.PatternLayout
#log4j.appender.W.layout.ConversionPattern=%d{ISO8601} %p %t %c - %m%n

# Error
log4j.appender.E=org.apache.log4j.RollingFileAppender
log4j.appender.E.threshold=ERROR
log4j.appender.E.File=${catalina.base}/logs/error/SCC-error.log
log4j.appender.E.MaxFileSize=3MB
log4j.appender.E.MaxBackupIndex=1
log4j.appender.E.layout=org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern=%d{ISO8601} %p %t %c - %m%n

# Fatal
log4j.appender.F=org.apache.log4j.RollingFileAppender
log4j.appender.F.threshold=FATAL
log4j.appender.F.File=${catalina.base}/logs/fatal/SCC-fatal.log
log4j.appender.F.MaxFileSize=3MB
log4j.appender.F.MaxBackupIndex=1
log4j.appender.F.layout=org.apache.log4j.PatternLayout
log4j.appender.F.layout.ConversionPattern=%d{ISO8601} %p %t %c - %m%n
